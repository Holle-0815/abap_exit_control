*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZVC_CAEC_MAIN...................................*
FORM GET_DATA_ZVC_CAEC_MAIN.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTC_CAEC_MAIN WHERE
(VIM_WHERETAB) .
    CLEAR ZVC_CAEC_MAIN .
ZVC_CAEC_MAIN-MANDT =
ZTC_CAEC_MAIN-MANDT .
ZVC_CAEC_MAIN-NUM =
ZTC_CAEC_MAIN-NUM .
ZVC_CAEC_MAIN-ENHTYPE =
ZTC_CAEC_MAIN-ENHTYPE .
ZVC_CAEC_MAIN-ENHNAME =
ZTC_CAEC_MAIN-ENHNAME .
ZVC_CAEC_MAIN-SWITCH =
ZTC_CAEC_MAIN-SWITCH .
ZVC_CAEC_MAIN-PARID =
ZTC_CAEC_MAIN-PARID .
ZVC_CAEC_MAIN-CRNAME =
ZTC_CAEC_MAIN-CRNAME .
ZVC_CAEC_MAIN-CRDATE =
ZTC_CAEC_MAIN-CRDATE .
ZVC_CAEC_MAIN-CRTIME =
ZTC_CAEC_MAIN-CRTIME .
ZVC_CAEC_MAIN-CHNAME =
ZTC_CAEC_MAIN-CHNAME .
ZVC_CAEC_MAIN-CHDATE =
ZTC_CAEC_MAIN-CHDATE .
ZVC_CAEC_MAIN-CHTIME =
ZTC_CAEC_MAIN-CHTIME .
    SELECT SINGLE * FROM ZTX_CAEC_MAIN WHERE
NUM = ZTC_CAEC_MAIN-NUM AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVC_CAEC_MAIN-DESCR =
ZTX_CAEC_MAIN-DESCR .
    ENDIF.
<VIM_TOTAL_STRUC> = ZVC_CAEC_MAIN.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVC_CAEC_MAIN .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVC_CAEC_MAIN.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVC_CAEC_MAIN-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTC_CAEC_MAIN WHERE
  NUM = ZVC_CAEC_MAIN-NUM .
    IF SY-SUBRC = 0.
    DELETE ZTC_CAEC_MAIN .
    ENDIF.
    DELETE FROM ZTX_CAEC_MAIN WHERE
    NUM = ZTC_CAEC_MAIN-NUM .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTC_CAEC_MAIN WHERE
  NUM = ZVC_CAEC_MAIN-NUM .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTC_CAEC_MAIN.
    ENDIF.
ZTC_CAEC_MAIN-MANDT =
ZVC_CAEC_MAIN-MANDT .
ZTC_CAEC_MAIN-NUM =
ZVC_CAEC_MAIN-NUM .
ZTC_CAEC_MAIN-ENHTYPE =
ZVC_CAEC_MAIN-ENHTYPE .
ZTC_CAEC_MAIN-ENHNAME =
ZVC_CAEC_MAIN-ENHNAME .
ZTC_CAEC_MAIN-SWITCH =
ZVC_CAEC_MAIN-SWITCH .
ZTC_CAEC_MAIN-PARID =
ZVC_CAEC_MAIN-PARID .
ZTC_CAEC_MAIN-CRNAME =
ZVC_CAEC_MAIN-CRNAME .
ZTC_CAEC_MAIN-CRDATE =
ZVC_CAEC_MAIN-CRDATE .
ZTC_CAEC_MAIN-CRTIME =
ZVC_CAEC_MAIN-CRTIME .
ZTC_CAEC_MAIN-CHNAME =
ZVC_CAEC_MAIN-CHNAME .
ZTC_CAEC_MAIN-CHDATE =
ZVC_CAEC_MAIN-CHDATE .
ZTC_CAEC_MAIN-CHTIME =
ZVC_CAEC_MAIN-CHTIME .
    IF SY-SUBRC = 0.
    UPDATE ZTC_CAEC_MAIN ##WARN_OK.
    ELSE.
    INSERT ZTC_CAEC_MAIN .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZTX_CAEC_MAIN WHERE
    NUM = ZTC_CAEC_MAIN-NUM AND
    LANGU = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZTX_CAEC_MAIN.
ZTX_CAEC_MAIN-NUM =
ZTC_CAEC_MAIN-NUM .
ZTX_CAEC_MAIN-LANGU =
SY-LANGU .
      ENDIF.
ZTX_CAEC_MAIN-DESCR =
ZVC_CAEC_MAIN-DESCR .
    IF SY-SUBRC = 0.
    UPDATE ZTX_CAEC_MAIN ##WARN_OK.
    ELSE.
    INSERT ZTX_CAEC_MAIN .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVC_CAEC_MAIN-UPD_FLAG,
STATUS_ZVC_CAEC_MAIN-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVC_CAEC_MAIN.
  SELECT SINGLE * FROM ZTC_CAEC_MAIN WHERE
NUM = ZVC_CAEC_MAIN-NUM .
ZVC_CAEC_MAIN-MANDT =
ZTC_CAEC_MAIN-MANDT .
ZVC_CAEC_MAIN-NUM =
ZTC_CAEC_MAIN-NUM .
ZVC_CAEC_MAIN-ENHTYPE =
ZTC_CAEC_MAIN-ENHTYPE .
ZVC_CAEC_MAIN-ENHNAME =
ZTC_CAEC_MAIN-ENHNAME .
ZVC_CAEC_MAIN-SWITCH =
ZTC_CAEC_MAIN-SWITCH .
ZVC_CAEC_MAIN-PARID =
ZTC_CAEC_MAIN-PARID .
ZVC_CAEC_MAIN-CRNAME =
ZTC_CAEC_MAIN-CRNAME .
ZVC_CAEC_MAIN-CRDATE =
ZTC_CAEC_MAIN-CRDATE .
ZVC_CAEC_MAIN-CRTIME =
ZTC_CAEC_MAIN-CRTIME .
ZVC_CAEC_MAIN-CHNAME =
ZTC_CAEC_MAIN-CHNAME .
ZVC_CAEC_MAIN-CHDATE =
ZTC_CAEC_MAIN-CHDATE .
ZVC_CAEC_MAIN-CHTIME =
ZTC_CAEC_MAIN-CHTIME .
    SELECT SINGLE * FROM ZTX_CAEC_MAIN WHERE
NUM = ZTC_CAEC_MAIN-NUM AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVC_CAEC_MAIN-DESCR =
ZTX_CAEC_MAIN-DESCR .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVC_CAEC_MAIN-DESCR .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVC_CAEC_MAIN USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVC_CAEC_MAIN-NUM TO
ZTC_CAEC_MAIN-NUM .
MOVE ZVC_CAEC_MAIN-MANDT TO
ZTC_CAEC_MAIN-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTC_CAEC_MAIN'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTC_CAEC_MAIN TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTC_CAEC_MAIN'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZTC_CAEC_MAIN-NUM TO
ZTX_CAEC_MAIN-NUM .
MOVE SY-LANGU TO
ZTX_CAEC_MAIN-LANGU .
MOVE ZVC_CAEC_MAIN-MANDT TO
ZTX_CAEC_MAIN-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTX_CAEC_MAIN'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTX_CAEC_MAIN TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTX_CAEC_MAIN'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVC_CAEC_MAIN_T.................................*
FORM GET_DATA_ZVC_CAEC_MAIN_T.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTX_CAEC_MAIN WHERE
(VIM_WHERETAB) .
    CLEAR ZVC_CAEC_MAIN_T .
ZVC_CAEC_MAIN_T-MANDT =
ZTX_CAEC_MAIN-MANDT .
ZVC_CAEC_MAIN_T-NUM =
ZTX_CAEC_MAIN-NUM .
ZVC_CAEC_MAIN_T-LANGU =
ZTX_CAEC_MAIN-LANGU .
ZVC_CAEC_MAIN_T-DESCR =
ZTX_CAEC_MAIN-DESCR .
<VIM_TOTAL_STRUC> = ZVC_CAEC_MAIN_T.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVC_CAEC_MAIN_T .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVC_CAEC_MAIN_T.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVC_CAEC_MAIN_T-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTX_CAEC_MAIN WHERE
  NUM = ZVC_CAEC_MAIN_T-NUM AND
  LANGU = ZVC_CAEC_MAIN_T-LANGU .
    IF SY-SUBRC = 0.
    DELETE ZTX_CAEC_MAIN .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTX_CAEC_MAIN WHERE
  NUM = ZVC_CAEC_MAIN_T-NUM AND
  LANGU = ZVC_CAEC_MAIN_T-LANGU .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTX_CAEC_MAIN.
    ENDIF.
ZTX_CAEC_MAIN-MANDT =
ZVC_CAEC_MAIN_T-MANDT .
ZTX_CAEC_MAIN-NUM =
ZVC_CAEC_MAIN_T-NUM .
ZTX_CAEC_MAIN-LANGU =
ZVC_CAEC_MAIN_T-LANGU .
ZTX_CAEC_MAIN-DESCR =
ZVC_CAEC_MAIN_T-DESCR .
    IF SY-SUBRC = 0.
    UPDATE ZTX_CAEC_MAIN ##WARN_OK.
    ELSE.
    INSERT ZTX_CAEC_MAIN .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVC_CAEC_MAIN_T-UPD_FLAG,
STATUS_ZVC_CAEC_MAIN_T-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVC_CAEC_MAIN_T.
  SELECT SINGLE * FROM ZTX_CAEC_MAIN WHERE
NUM = ZVC_CAEC_MAIN_T-NUM AND
LANGU = ZVC_CAEC_MAIN_T-LANGU .
ZVC_CAEC_MAIN_T-MANDT =
ZTX_CAEC_MAIN-MANDT .
ZVC_CAEC_MAIN_T-NUM =
ZTX_CAEC_MAIN-NUM .
ZVC_CAEC_MAIN_T-LANGU =
ZTX_CAEC_MAIN-LANGU .
ZVC_CAEC_MAIN_T-DESCR =
ZTX_CAEC_MAIN-DESCR .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVC_CAEC_MAIN_T USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVC_CAEC_MAIN_T-NUM TO
ZTX_CAEC_MAIN-NUM .
MOVE ZVC_CAEC_MAIN_T-LANGU TO
ZTX_CAEC_MAIN-LANGU .
MOVE ZVC_CAEC_MAIN_T-MANDT TO
ZTX_CAEC_MAIN-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTX_CAEC_MAIN'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTX_CAEC_MAIN TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTX_CAEC_MAIN'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVC_CAEC_VALUE..................................*
FORM GET_DATA_ZVC_CAEC_VALUE.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTC_CAEC_VALUE WHERE
(VIM_WHERETAB) .
    CLEAR ZVC_CAEC_VALUE .
ZVC_CAEC_VALUE-MANDT =
ZTC_CAEC_VALUE-MANDT .
ZVC_CAEC_VALUE-NUM =
ZTC_CAEC_VALUE-NUM .
ZVC_CAEC_VALUE-POS =
ZTC_CAEC_VALUE-POS .
ZVC_CAEC_VALUE-ELEMENT =
ZTC_CAEC_VALUE-ELEMENT .
ZVC_CAEC_VALUE-SIGN =
ZTC_CAEC_VALUE-SIGN .
ZVC_CAEC_VALUE-OPT =
ZTC_CAEC_VALUE-OPT .
ZVC_CAEC_VALUE-LOW =
ZTC_CAEC_VALUE-LOW .
ZVC_CAEC_VALUE-HIGH =
ZTC_CAEC_VALUE-HIGH .
ZVC_CAEC_VALUE-SWITCH =
ZTC_CAEC_VALUE-SWITCH .
ZVC_CAEC_VALUE-CRNAME =
ZTC_CAEC_VALUE-CRNAME .
ZVC_CAEC_VALUE-CRDATE =
ZTC_CAEC_VALUE-CRDATE .
ZVC_CAEC_VALUE-CRTIME =
ZTC_CAEC_VALUE-CRTIME .
ZVC_CAEC_VALUE-CHNAME =
ZTC_CAEC_VALUE-CHNAME .
ZVC_CAEC_VALUE-CHDATE =
ZTC_CAEC_VALUE-CHDATE .
ZVC_CAEC_VALUE-CHTIME =
ZTC_CAEC_VALUE-CHTIME .
<VIM_TOTAL_STRUC> = ZVC_CAEC_VALUE.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVC_CAEC_VALUE .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVC_CAEC_VALUE.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVC_CAEC_VALUE-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTC_CAEC_VALUE WHERE
  NUM = ZVC_CAEC_VALUE-NUM AND
  POS = ZVC_CAEC_VALUE-POS .
    IF SY-SUBRC = 0.
    DELETE ZTC_CAEC_VALUE .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTC_CAEC_VALUE WHERE
  NUM = ZVC_CAEC_VALUE-NUM AND
  POS = ZVC_CAEC_VALUE-POS .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTC_CAEC_VALUE.
    ENDIF.
ZTC_CAEC_VALUE-MANDT =
ZVC_CAEC_VALUE-MANDT .
ZTC_CAEC_VALUE-NUM =
ZVC_CAEC_VALUE-NUM .
ZTC_CAEC_VALUE-POS =
ZVC_CAEC_VALUE-POS .
ZTC_CAEC_VALUE-ELEMENT =
ZVC_CAEC_VALUE-ELEMENT .
ZTC_CAEC_VALUE-SIGN =
ZVC_CAEC_VALUE-SIGN .
ZTC_CAEC_VALUE-OPT =
ZVC_CAEC_VALUE-OPT .
ZTC_CAEC_VALUE-LOW =
ZVC_CAEC_VALUE-LOW .
ZTC_CAEC_VALUE-HIGH =
ZVC_CAEC_VALUE-HIGH .
ZTC_CAEC_VALUE-SWITCH =
ZVC_CAEC_VALUE-SWITCH .
ZTC_CAEC_VALUE-CRNAME =
ZVC_CAEC_VALUE-CRNAME .
ZTC_CAEC_VALUE-CRDATE =
ZVC_CAEC_VALUE-CRDATE .
ZTC_CAEC_VALUE-CRTIME =
ZVC_CAEC_VALUE-CRTIME .
ZTC_CAEC_VALUE-CHNAME =
ZVC_CAEC_VALUE-CHNAME .
ZTC_CAEC_VALUE-CHDATE =
ZVC_CAEC_VALUE-CHDATE .
ZTC_CAEC_VALUE-CHTIME =
ZVC_CAEC_VALUE-CHTIME .
    IF SY-SUBRC = 0.
    UPDATE ZTC_CAEC_VALUE ##WARN_OK.
    ELSE.
    INSERT ZTC_CAEC_VALUE .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVC_CAEC_VALUE-UPD_FLAG,
STATUS_ZVC_CAEC_VALUE-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVC_CAEC_VALUE.
  SELECT SINGLE * FROM ZTC_CAEC_VALUE WHERE
NUM = ZVC_CAEC_VALUE-NUM AND
POS = ZVC_CAEC_VALUE-POS .
ZVC_CAEC_VALUE-MANDT =
ZTC_CAEC_VALUE-MANDT .
ZVC_CAEC_VALUE-NUM =
ZTC_CAEC_VALUE-NUM .
ZVC_CAEC_VALUE-POS =
ZTC_CAEC_VALUE-POS .
ZVC_CAEC_VALUE-ELEMENT =
ZTC_CAEC_VALUE-ELEMENT .
ZVC_CAEC_VALUE-SIGN =
ZTC_CAEC_VALUE-SIGN .
ZVC_CAEC_VALUE-OPT =
ZTC_CAEC_VALUE-OPT .
ZVC_CAEC_VALUE-LOW =
ZTC_CAEC_VALUE-LOW .
ZVC_CAEC_VALUE-HIGH =
ZTC_CAEC_VALUE-HIGH .
ZVC_CAEC_VALUE-SWITCH =
ZTC_CAEC_VALUE-SWITCH .
ZVC_CAEC_VALUE-CRNAME =
ZTC_CAEC_VALUE-CRNAME .
ZVC_CAEC_VALUE-CRDATE =
ZTC_CAEC_VALUE-CRDATE .
ZVC_CAEC_VALUE-CRTIME =
ZTC_CAEC_VALUE-CRTIME .
ZVC_CAEC_VALUE-CHNAME =
ZTC_CAEC_VALUE-CHNAME .
ZVC_CAEC_VALUE-CHDATE =
ZTC_CAEC_VALUE-CHDATE .
ZVC_CAEC_VALUE-CHTIME =
ZTC_CAEC_VALUE-CHTIME .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVC_CAEC_VALUE USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVC_CAEC_VALUE-NUM TO
ZTC_CAEC_VALUE-NUM .
MOVE ZVC_CAEC_VALUE-POS TO
ZTC_CAEC_VALUE-POS .
MOVE ZVC_CAEC_VALUE-MANDT TO
ZTC_CAEC_VALUE-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTC_CAEC_VALUE'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTC_CAEC_VALUE TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTC_CAEC_VALUE'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
